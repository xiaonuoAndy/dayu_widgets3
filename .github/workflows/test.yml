name: Test and Lint

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        python-version: [3.9]
        qt-binding: ['pyside2']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: '**/pyproject.toml'

    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0 x11-utils

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nox

    - name: Run tests (Windows)
      if: runner.os == 'Windows'
      run: |
        nox -s test -- --qt-binding=${{ matrix.qt-binding }}

    - name: Run tests (Linux)
      if: runner.os == 'Linux'
      run: |
        xvfb-run --auto-servernum nox -s test -- --qt-binding=${{ matrix.qt-binding }}

    - name: Run tests (macOS)
      if: runner.os == 'macOS'
      run: |
        nox -s test -- --qt-binding=${{ matrix.qt-binding }}

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      continue-on-error: true
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
        cache-dependency-path: '**/pyproject.toml'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nox

    - name: Run lint
      run: |
        nox -s lint

  maya-test:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
        cache-dependency-path: '**/pyproject.toml'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nox

    - name: Run Maya compatibility tests
      run: |
        nox -s maya-test

  blender-test:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
        cache-dependency-path: '**/pyproject.toml'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nox

    - name: Run Blender compatibility tests
      run: |
        nox -s blender-test
